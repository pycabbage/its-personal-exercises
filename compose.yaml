services:
  # server:
  #   image: nginx:1.25.5
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./server/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
  #   networks:
  #     - proxy_network
  #   depends_on:
  #     - api
  web:
    # image: ghcr.io/pycabbage/its-personal-exercises/web:latest
    # pull_policy: always
    build:
      context: web
    ports:
      - 3000:3000
    environment:
      - API_HOST=api
    # expose:
    #   - "3000/tcp"
    networks:
      - api_network
    depends_on:
      - api
  api:
    # image: ghcr.io/pycabbage/its-personal-exercises:latest
    # pull_policy: always
    build:
      context: .
    expose:
      - "8080/tcp"
    environment:
      - MYSQL_HOST=db
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-kL", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 6
      start_period: 5s
    networks:
      - database_network
      - api_network
  db:
    image: mysql:8.4
    restart: always
    user: mysql
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    expose:
      - "3306/tcp"
      - "33060/tcp"
    command: |
      --default-time-zone=+09:00
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 30s
      timeout: 5s
      retries: 6
      start_period: 5s
    networks:
      - database_network

volumes:
  db-data:

networks:
  # proxy_network:
  api_network:
  database_network:
