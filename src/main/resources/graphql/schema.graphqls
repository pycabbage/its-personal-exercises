scalar Date
@specifiedBy(url:
"https://tools.ietf.org/html/rfc3339"
)
scalar Long

type Query {
    bookById(id: ID): Book

    register(user: PrivateUser): PublicUser
    login(
        username: String,
        password: String
    ): Boolean

     createSchedule(
         title: String,
         userId: Int,
         start: Date,
         end: Date
     ): Schedule
     getSchedule(
         scheduleId: Int
     ): Schedule
     writeSchedule(
         scheduleId: Int,
         availabilities: IAvailabilities
     ): Schedule
}

type Book {
    id: ID
    name: String
    pageCount: Int
    author: Author
}

type Author {
    id: ID
    firstName: String
    lastName: String
}

type PublicUser {
    userId: Int
    name: String
    displayName: String
}
input IPublicUser {
    userId: Int
    name: String
    displayName: String
}

input PrivateUser {
    userId: Int
    name: String
    displayName: String
    password: String
}

type Period {
    start: Date
    end: Date
}
type Availabilities {
    createdBy: PublicUser
    dates: [AvailabilityDate]
}
input IAvailabilities {
    createdBy: IPublicUser
    dates: [IAvailabilityDate]
}
type AvailabilityDate {
    date: Date
    availability: AvailabilityStatus
}
input IAvailabilityDate {
    date: Date
    availability: AvailabilityStatus
}

enum AvailabilityStatus {
    YES
    NO
    MAYBE
}

type Schedule {
    scheduleId: Int
    title: String
    createdBy: PublicUser
    period: Period
    availabilities: [Availabilities]
}
